# doing the devs:
# watchexec -cr -- tmux source ./tmux/tmux.conf
# watch -n 1 -- "tmux show-options key-table; tmux list-keys -T b"

base_layer="b"
resize_layer="r"
speed_layer="s"
insert_layer="root"
kube_layer="k"
unbind -T ${base_layer}   -a
unbind -T ${resize_layer} -a
unbind -T ${speed_layer}  -a
unbind -T ${kube_layer}  -a

# invoke script to set styles
set_keytable="zsh -l ~/.tmux/conf/scripts/set_keytable.sh"

# set layer to insert by default
run-shell "${set_keytable} base"

# insert layer
bind -T ${insert_layer} -n 'C-j' run-shell "${set_keytable} base"
set -g pane-active-border-style ${insert_style}
set -g pane-border-style "bg=default fg=brightblack"

# base layer
bind -T ${base_layer} Escape run-shell "${set_keytable} insert"
bind -T ${base_layer} Space next-layout
bind -T ${base_layer} Enter select-pane -t :.+ # next pane
bind -T ${base_layer} r run-shell "${set_keytable} resize"
bind -T ${base_layer} R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
bind -T ${base_layer} s run-shell "${set_keytable} speed"
bind -T ${base_layer} c copy-mode
bind -T ${base_layer} C run-shell -b ${HOME}/.tmux/plugins/tmux-jump/scripts/tmux-jump.sh
bind -T ${base_layer} d detach
bind -T ${base_layer} D kill-pane
bind -T ${base_layer} w new-window -c "#{pane_current_path}"
bind -T ${base_layer} W kill-window
bind -T ${base_layer} H previous-window
bind -T ${base_layer} L next-window
bind -T ${base_layer} J switch-client -p
bind -T ${base_layer} K switch-client -n
bind -T ${base_layer} h select-pane -L
bind -T ${base_layer} j select-pane -D
bind -T ${base_layer} k select-pane -U
bind -T ${base_layer} C-k run-shell "${set_keytable} kube"
bind -T ${base_layer} l select-pane -R
bind -T ${base_layer} z resize-pane -Z
bind -T ${base_layer} Z run-shell ${HOME}/.tmux/plugins/tmux-power-zoom/scripts/power_zoom.sh
bind -T ${base_layer} C-j split-window -v -c "#{pane_current_path}"
bind -T ${base_layer} C-l split-window -h -c "#{pane_current_path}"
bind -T ${base_layer} > swap-pane -D # swap current pane with the next one
bind -T ${base_layer} < swap-pane -U # swap current pane with the previous one
bind -T ${base_layer} , command-prompt -p (rename-window) "rename-window '%%'"
# synchronize panes options
bind -T ${base_layer} S setw synchronize-panes\; run-shell "${set_keytable} insert"
bind -T ${base_layer} e select-pane -e                    # enable editing on pane
bind -T ${base_layer} E select-pane -d                    # disable editing on pane
bind -T ${base_layer} f run-shell "zsh -lc 't_edit_all'"  # enable editing on all
bind -T ${base_layer} F run-shell "zsh -lc 't_edit_none'" # disable editing on all
bind -T ${base_layer} o popup -w 70% -h 80% -E -- zsh -l -c "${HOME}/.dotfiles/dots/shell_scripts/tmux_buffers.sh"\; run-shell "${set_keytable} insert"
bind -T ${base_layer} y popup -w 70% -h 80% -d "#{pane_current_path}"\; run-shell "${set_keytable} insert"
bind -T ${base_layer} X command-prompt kill-session
bind -T ${base_layer} g resize-pane -Z\; run-shell "${set_keytable} insert"\; send C-g # enter goyo
bind -T ${base_layer} G resize-pane -Z\; send C-M-g                                    # exit goyo

# kube layer
bind -T ${kube_layer} Escape run-shell "${set_keytable} base"
# help with Keys: https://github.com/tmux/tmux/blob/master/input-keys.c#L120
# set current context to non-default
bind -T ${kube_layer} j split-window -v -c "#{pane_current_path}"\; run-shell "${set_keytable} insert" \; send "export KUBECONFIG=\"$(ks kube --pipe )\"" Left Left Tab
bind -T ${kube_layer} l split-window -h -c "#{pane_current_path}"\; run-shell "${set_keytable} insert" \; send "export KUBECONFIG=\"$(ks kube --pipe )\"" Left Left Tab
# copy current context and set the namespace to something else
bind -T ${kube_layer} C-j split-window -v -c "#{pane_current_path}"\; run-shell "${set_keytable} insert" \; send kc_app_context_cp ENTER
bind -T ${kube_layer} C-l split-window -h -c "#{pane_current_path}"\; run-shell "${set_keytable} insert" \; send kc_app_context_cp ENTER
# invoke in place copy manually
bind -T ${kube_layer} c run-shell "${set_keytable} insert"\; send "kc_app_context_cp" ENTER
bind -T ${kube_layer} C run-shell "zsh -lc 'kc_app_context_clean '" # split into new pane w/ kube copy

# resize layer
large_resize=5
bind -T ${resize_layer} Escape run-shell "${set_keytable} base"
bind -T ${resize_layer} k resize-pane -U ${large_resize}
bind -T ${resize_layer} j resize-pane -D ${large_resize}
bind -T ${resize_layer} h resize-pane -L ${large_resize}
bind -T ${resize_layer} l resize-pane -R ${large_resize}
bind -T ${resize_layer} K resize-pane -U
bind -T ${resize_layer} J resize-pane -D
bind -T ${resize_layer} H resize-pane -L
bind -T ${resize_layer} L resize-pane -R

# speed
bind -T ${speed_layer} Escape run-shell "${set_keytable} base"
# Quick File Editing
bind -T ${speed_layer} a split-window -h -Z "zsh -c 'cd ${HOME}/.dotfiles; nvim -c FZF .'"\; run-shell "${set_keytable} insert"
bind -T ${speed_layer} s split-window -h -Z "zsh -c 'cd ${HOME}/workspace/github/bradfordwagner/src/bradfordwagner.src.cheatsheet; nvim -c FZF .'"\; run-shell "${set_keytable} insert"
# Rename Window to Last Part of Path
bind -T ${speed_layer} D rename-window '#(basename "#{pane_current_path}")'
bind -T ${speed_layer} j popup -w 70% -h 80% -E -- zsh -l -c "${HOME}/.dotfiles/dots/shell_scripts/speed/jump_create_window.sh"\; run-shell "${set_keytable} insert"
bind -T ${speed_layer} k popup -w 70% -h 80% -E -- zsh -l -c "${HOME}/.dotfiles/dots/shell_scripts/speed/fzf_create_window.sh"\; run-shell "${set_keytable} insert"
bind -T ${speed_layer} y popup -w 70% -h 80% -d "#{pane_current_path}"\; run-shell "${set_keytable} insert"
bind -T ${speed_layer} u popup -w 70% -h 80% -E -- zsh -l -c "${HOME}/.dotfiles/dots/shell_scripts/fzf_speed.sh"\; run-shell "${set_keytable} insert"
bind -T ${speed_layer} i popup -w 70% -h 80% -E -- zsh -l -c "${HOME}/.dotfiles/dots/shell_scripts/tmux_select_session.sh"\; run-shell "${set_keytable} insert"
bind -T ${speed_layer} o popup -w 70% -h 80% -E -- zsh -l -c "${HOME}/.dotfiles/dots/shell_scripts/tmux_select_window.sh"\; run-shell "${set_keytable} insert"
bind -T ${speed_layer} [ popup -w 70% -h 80% -E -- zsh -l -c "${HOME}/.dotfiles/dots/shell_scripts/tmux_buffers.sh"\; run-shell "${set_keytable} insert"


